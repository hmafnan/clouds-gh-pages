{"version":3,"sources":["API.tsx","components/CloudProviderList.tsx","components/Header.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["fetchCloudProviders","provider","nearest","latitude","longitude","a","endpoint","fetch","json","data","CloudProviderList","React","useState","setProvider","setNearest","setLatitude","setLongitude","cloud_description","cloud_name","geo_region","clouds","setClouds","useEffect","getData","navigator","geolocation","getCurrentPosition","position","lat","coords","long","toFixed","className","style","color","aria-label","value","onChange","event","target","id","title","onClick","map","cloud","index","HeaderWrapper","styled","div","LogoWrapper","Header","href","alt","width","height","src","aria-current","BodyWrapper","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84d96545.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const fetchCloudProviders = async (provider: string, nearest: string, latitude: string, longitude: string) => {\n    const endpoint = `https://100.24.255.129:8000/provider/clouds?provider=${provider}&nearest=${nearest}&latitude=${latitude}&longitude=${longitude}`\n    const data = await (await fetch(endpoint)).json();\n    return data;\n};","import React from \"react\";\nimport {fetchCloudProviders} from \"../API\";\n\n\nconst CloudProviderList: React.FC = () => {\n    const [provider, setProvider] = React.useState('all')\n    const [nearest, setNearest] = React.useState('0');\n    const [latitude, setLatitude] = React.useState('0');\n    const [longitude, setLongitude] = React.useState('0');\n    const [clouds, setClouds] = React.useState([{\n        cloud_description: '',\n        cloud_name: '',\n        geo_region: ''\n    }])\n\n    React.useEffect(() => {\n        getData();\n    }, [])\n\n\n    const setCoords = () => {\n        // Logic to set current coordinates\n        // Copied from the following url\n        // https://developer.mozilla.org/en-US/docs/Web/API/GeolocationCoordinates/longitude\n\n        navigator.geolocation.getCurrentPosition(function(position) {\n            let lat = position.coords.latitude;\n            let long = position.coords.longitude;\n\n            setLatitude(lat.toFixed(2));\n            setLongitude(long.toFixed(2));\n        });\n    }\n\n    const getData = async () => {\n        setCoords();\n        setClouds(await fetchCloudProviders(provider, nearest, latitude, longitude));\n    }\n\n\n    const providerChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n        setProvider(event.target.value);\n    }\n\n    const nearestChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n        setNearest(event.target.value)\n    }\n\n    const renderTableData = () => {\n      return clouds.map((cloud, index) => {\n         const { cloud_description, cloud_name, geo_region } = cloud //destructuring\n         return (\n            <tr key={index}>\n               <td>{cloud_name}</td>\n               <td>{geo_region}</td>\n               <td>{cloud_description}</td>\n            </tr>\n         )\n      })\n   }\n\n    return (\n        <div className=\"providers_list\">\n            <h2 className=\"display-6\" style={{color:\"#FF524D\"}}>Available Cloud Providers</h2>\n            <div className=\"row\">\n                <div className=\"col-4\">\n                    <select className=\"form-select form-select-sm\"\n                            aria-label=\".form-select-sm example\" value={provider}\n                            onChange={providerChange}>\n                        <option value=\"all\">All Providers</option>\n                        <option value=\"aws\">Amazon Web Services</option>\n                        <option value=\"google\">Google Cloud Platform</option>\n                    </select>\n                </div>\n                <div className=\"col-3\">\n                    <div className=\"form-check\">\n                        <select className=\"form-select form-select-sm\" id=\"flexCheckDefault\"\n                            aria-label=\".form-select-sm example\" value={nearest}\n                            onChange={nearestChange}>\n                        <option value=\"0\">All Regions</option>\n                        <option value=\"1\">Nearest Regions</option>\n                    </select>\n                    </div>\n                </div>\n                <div className=\"col-5\">\n                    <button title=\"Click to retrieve data\"\n                            onClick={getData} className=\"btn btn-primary float-end\">Apply Filter</button>\n                </div>\n            </div>\n\n            <table className=\"table table-striped table-bordered mt-3\">\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Region</th>\n                        <th>Description</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {renderTableData()}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default CloudProviderList;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst HeaderWrapper = styled.div`\n    background-color: #f94f4c;\n    color: white;\n    height: 55px;\n    padding: 8px;\n`;\n\nconst LogoWrapper = styled.div`\n    float: left;\n    width: 150px;\n    margin-left: 30px;\n`;\n\n\nconst Header = () => {\n    return (\n        <HeaderWrapper>\n            <LogoWrapper>\n                <a href=\"#\">\n                    <img alt=\"Aiven Logo\" width=\"150\" height=\"35\"\n                         src=\"https://downloads.intercomcdn.com/i/o/7690/99852eb0cd241b1697669055/aiven-logo-rgb-nega.png\" />\n                </a>\n            </LogoWrapper>\n            <ul className=\"nav\">\n                <li className=\"nav-item\">\n                    <a className=\"nav-link active\" aria-current=\"page\" href=\"#\" style={{color:'white'}}>Home</a>\n                </li>\n            </ul>\n        </HeaderWrapper>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport styled from \"styled-components\";\n\nimport CloudProviderList from \"./components/CloudProviderList\";\nimport Header from \"./components/Header\";\n\nconst BodyWrapper = styled.div`\n    width: 900px;\n    margin: 0 auto;\n`;\n\nconst App: React.FC = () => {\n  const Providers = async () => {\n\n  }\n  return (\n    <div className=\"App\">\n      <Header/>\n      <BodyWrapper>\n        <CloudProviderList/>\n      </BodyWrapper>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}